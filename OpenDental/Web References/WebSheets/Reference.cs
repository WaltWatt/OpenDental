//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OpenDental.WebSheets {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
		using OpenDentBusiness;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SheetsSoap", Namespace="http://opendental.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TableBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RelatedEnd))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StructuralObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityKeyMember[]))]
    public partial class Sheets : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPreferencesV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSheetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSheetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRegistrationKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDentalOfficeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ServiceExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSheetDefAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadSheetDefsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSheetDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpLoadSheetDefOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSheetDefOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Sheets() {
            this.Url = global::OpenDental.Properties.Settings.Default.OpenDental_WebSheets_Sheets;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetPreferencesCompletedEventHandler SetPreferencesCompleted;
        
        /// <remarks/>
        public event SetPreferencesV2CompletedEventHandler SetPreferencesV2Completed;
        
        /// <remarks/>
        public event GetPreferencesCompletedEventHandler GetPreferencesCompleted;
        
        /// <remarks/>
        public event GetSheetsCompletedEventHandler GetSheetsCompleted;
        
        /// <remarks/>
        public event DeleteSheetDataCompletedEventHandler DeleteSheetDataCompleted;
        
        /// <remarks/>
        public event CheckRegistrationKeyCompletedEventHandler CheckRegistrationKeyCompleted;
        
        /// <remarks/>
        public event GetDentalOfficeIDCompletedEventHandler GetDentalOfficeIDCompleted;
        
        /// <remarks/>
        public event ServiceExistsCompletedEventHandler ServiceExistsCompleted;
        
        /// <remarks/>
        public event GetSheetDefAddressCompletedEventHandler GetSheetDefAddressCompleted;
        
        /// <remarks/>
        public event DownloadSheetDefsCompletedEventHandler DownloadSheetDefsCompleted;
        
        /// <remarks/>
        public event DeleteSheetDefCompletedEventHandler DeleteSheetDefCompleted;
        
        /// <remarks/>
        public event UpLoadSheetDefCompletedEventHandler UpLoadSheetDefCompleted;
        
        /// <remarks/>
        public event UpdateSheetDefCompletedEventHandler UpdateSheetDefCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/SetPreferences", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPreferences(string RegistrationKey, int ColorBorder) {
            object[] results = this.Invoke("SetPreferences", new object[] {
                        RegistrationKey,
                        ColorBorder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPreferencesAsync(string RegistrationKey, int ColorBorder) {
            this.SetPreferencesAsync(RegistrationKey, ColorBorder, null);
        }
        
        /// <remarks/>
        public void SetPreferencesAsync(string RegistrationKey, int ColorBorder, object userState) {
            if ((this.SetPreferencesOperationCompleted == null)) {
                this.SetPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPreferencesOperationCompleted);
            }
            this.InvokeAsync("SetPreferences", new object[] {
                        RegistrationKey,
                        ColorBorder}, this.SetPreferencesOperationCompleted, userState);
        }
        
        private void OnSetPreferencesOperationCompleted(object arg) {
            if ((this.SetPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPreferencesCompleted(this, new SetPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/SetPreferencesV2", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetPreferencesV2(string RegistrationKey, webforms_preference prefObj) {
            object[] results = this.Invoke("SetPreferencesV2", new object[] {
                        RegistrationKey,
                        prefObj});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetPreferencesV2Async(string RegistrationKey, webforms_preference prefObj) {
            this.SetPreferencesV2Async(RegistrationKey, prefObj, null);
        }
        
        /// <remarks/>
        public void SetPreferencesV2Async(string RegistrationKey, webforms_preference prefObj, object userState) {
            if ((this.SetPreferencesV2OperationCompleted == null)) {
                this.SetPreferencesV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPreferencesV2OperationCompleted);
            }
            this.InvokeAsync("SetPreferencesV2", new object[] {
                        RegistrationKey,
                        prefObj}, this.SetPreferencesV2OperationCompleted, userState);
        }
        
        private void OnSetPreferencesV2OperationCompleted(object arg) {
            if ((this.SetPreferencesV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPreferencesV2Completed(this, new SetPreferencesV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetPreferences", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public webforms_preference GetPreferences(string RegistrationKey) {
            object[] results = this.Invoke("GetPreferences", new object[] {
                        RegistrationKey});
            return ((webforms_preference)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreferencesAsync(string RegistrationKey) {
            this.GetPreferencesAsync(RegistrationKey, null);
        }
        
        /// <remarks/>
        public void GetPreferencesAsync(string RegistrationKey, object userState) {
            if ((this.GetPreferencesOperationCompleted == null)) {
                this.GetPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetPreferences", new object[] {
                        RegistrationKey}, this.GetPreferencesOperationCompleted, userState);
        }
        
        private void OnGetPreferencesOperationCompleted(object arg) {
            if ((this.GetPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreferencesCompleted(this, new GetPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetSheets", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SheetAndSheetField[] GetSheets(string RegistrationKey) {
            object[] results = this.Invoke("GetSheets", new object[] {
                        RegistrationKey});
            return ((SheetAndSheetField[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSheetsAsync(string RegistrationKey) {
            this.GetSheetsAsync(RegistrationKey, null);
        }
        
        /// <remarks/>
        public void GetSheetsAsync(string RegistrationKey, object userState) {
            if ((this.GetSheetsOperationCompleted == null)) {
                this.GetSheetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSheetsOperationCompleted);
            }
            this.InvokeAsync("GetSheets", new object[] {
                        RegistrationKey}, this.GetSheetsOperationCompleted, userState);
        }
        
        private void OnGetSheetsOperationCompleted(object arg) {
            if ((this.GetSheetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSheetsCompleted(this, new GetSheetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/DeleteSheetData", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSheetData(string RegistrationKey, long[] SheetsForDeletion) {
            this.Invoke("DeleteSheetData", new object[] {
                        RegistrationKey,
                        SheetsForDeletion});
        }
        
        /// <remarks/>
        public void DeleteSheetDataAsync(string RegistrationKey, long[] SheetsForDeletion) {
            this.DeleteSheetDataAsync(RegistrationKey, SheetsForDeletion, null);
        }
        
        /// <remarks/>
        public void DeleteSheetDataAsync(string RegistrationKey, long[] SheetsForDeletion, object userState) {
            if ((this.DeleteSheetDataOperationCompleted == null)) {
                this.DeleteSheetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSheetDataOperationCompleted);
            }
            this.InvokeAsync("DeleteSheetData", new object[] {
                        RegistrationKey,
                        SheetsForDeletion}, this.DeleteSheetDataOperationCompleted, userState);
        }
        
        private void OnDeleteSheetDataOperationCompleted(object arg) {
            if ((this.DeleteSheetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSheetDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/CheckRegistrationKey", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckRegistrationKey(string RegistrationKeyFromDentalOffice) {
            object[] results = this.Invoke("CheckRegistrationKey", new object[] {
                        RegistrationKeyFromDentalOffice});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckRegistrationKeyAsync(string RegistrationKeyFromDentalOffice) {
            this.CheckRegistrationKeyAsync(RegistrationKeyFromDentalOffice, null);
        }
        
        /// <remarks/>
        public void CheckRegistrationKeyAsync(string RegistrationKeyFromDentalOffice, object userState) {
            if ((this.CheckRegistrationKeyOperationCompleted == null)) {
                this.CheckRegistrationKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRegistrationKeyOperationCompleted);
            }
            this.InvokeAsync("CheckRegistrationKey", new object[] {
                        RegistrationKeyFromDentalOffice}, this.CheckRegistrationKeyOperationCompleted, userState);
        }
        
        private void OnCheckRegistrationKeyOperationCompleted(object arg) {
            if ((this.CheckRegistrationKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRegistrationKeyCompleted(this, new CheckRegistrationKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetDentalOfficeID", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetDentalOfficeID(string RegistrationKeyFromDentalOffice) {
            object[] results = this.Invoke("GetDentalOfficeID", new object[] {
                        RegistrationKeyFromDentalOffice});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetDentalOfficeIDAsync(string RegistrationKeyFromDentalOffice) {
            this.GetDentalOfficeIDAsync(RegistrationKeyFromDentalOffice, null);
        }
        
        /// <remarks/>
        public void GetDentalOfficeIDAsync(string RegistrationKeyFromDentalOffice, object userState) {
            if ((this.GetDentalOfficeIDOperationCompleted == null)) {
                this.GetDentalOfficeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDentalOfficeIDOperationCompleted);
            }
            this.InvokeAsync("GetDentalOfficeID", new object[] {
                        RegistrationKeyFromDentalOffice}, this.GetDentalOfficeIDOperationCompleted, userState);
        }
        
        private void OnGetDentalOfficeIDOperationCompleted(object arg) {
            if ((this.GetDentalOfficeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDentalOfficeIDCompleted(this, new GetDentalOfficeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/ServiceExists", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ServiceExists() {
            object[] results = this.Invoke("ServiceExists", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ServiceExistsAsync() {
            this.ServiceExistsAsync(null);
        }
        
        /// <remarks/>
        public void ServiceExistsAsync(object userState) {
            if ((this.ServiceExistsOperationCompleted == null)) {
                this.ServiceExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnServiceExistsOperationCompleted);
            }
            this.InvokeAsync("ServiceExists", new object[0], this.ServiceExistsOperationCompleted, userState);
        }
        
        private void OnServiceExistsOperationCompleted(object arg) {
            if ((this.ServiceExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ServiceExistsCompleted(this, new ServiceExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/GetSheetDefAddress", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSheetDefAddress(string RegistrationKey) {
            object[] results = this.Invoke("GetSheetDefAddress", new object[] {
                        RegistrationKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSheetDefAddressAsync(string RegistrationKey) {
            this.GetSheetDefAddressAsync(RegistrationKey, null);
        }
        
        /// <remarks/>
        public void GetSheetDefAddressAsync(string RegistrationKey, object userState) {
            if ((this.GetSheetDefAddressOperationCompleted == null)) {
                this.GetSheetDefAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSheetDefAddressOperationCompleted);
            }
            this.InvokeAsync("GetSheetDefAddress", new object[] {
                        RegistrationKey}, this.GetSheetDefAddressOperationCompleted, userState);
        }
        
        private void OnGetSheetDefAddressOperationCompleted(object arg) {
            if ((this.GetSheetDefAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSheetDefAddressCompleted(this, new GetSheetDefAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/DownloadSheetDefs", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public webforms_sheetdef[] DownloadSheetDefs(string RegistrationKey) {
            object[] results = this.Invoke("DownloadSheetDefs", new object[] {
                        RegistrationKey});
            return ((webforms_sheetdef[])(results[0]));
        }
        
        /// <remarks/>
        public void DownloadSheetDefsAsync(string RegistrationKey) {
            this.DownloadSheetDefsAsync(RegistrationKey, null);
        }
        
        /// <remarks/>
        public void DownloadSheetDefsAsync(string RegistrationKey, object userState) {
            if ((this.DownloadSheetDefsOperationCompleted == null)) {
                this.DownloadSheetDefsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadSheetDefsOperationCompleted);
            }
            this.InvokeAsync("DownloadSheetDefs", new object[] {
                        RegistrationKey}, this.DownloadSheetDefsOperationCompleted, userState);
        }
        
        private void OnDownloadSheetDefsOperationCompleted(object arg) {
            if ((this.DownloadSheetDefsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadSheetDefsCompleted(this, new DownloadSheetDefsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/DeleteSheetDef", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSheetDef(string RegistrationKey, long WebSheetDefID) {
            this.Invoke("DeleteSheetDef", new object[] {
                        RegistrationKey,
                        WebSheetDefID});
        }
        
        /// <remarks/>
        public void DeleteSheetDefAsync(string RegistrationKey, long WebSheetDefID) {
            this.DeleteSheetDefAsync(RegistrationKey, WebSheetDefID, null);
        }
        
        /// <remarks/>
        public void DeleteSheetDefAsync(string RegistrationKey, long WebSheetDefID, object userState) {
            if ((this.DeleteSheetDefOperationCompleted == null)) {
                this.DeleteSheetDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSheetDefOperationCompleted);
            }
            this.InvokeAsync("DeleteSheetDef", new object[] {
                        RegistrationKey,
                        WebSheetDefID}, this.DeleteSheetDefOperationCompleted, userState);
        }
        
        private void OnDeleteSheetDefOperationCompleted(object arg) {
            if ((this.DeleteSheetDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSheetDefCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/UpLoadSheetDef", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpLoadSheetDef(string RegistrationKey, SheetDef sheetDef) {
            this.Invoke("UpLoadSheetDef", new object[] {
                        RegistrationKey,
                        sheetDef});
        }
        
        /// <remarks/>
        public void UpLoadSheetDefAsync(string RegistrationKey, SheetDef sheetDef) {
            this.UpLoadSheetDefAsync(RegistrationKey, sheetDef, null);
        }
        
        /// <remarks/>
        public void UpLoadSheetDefAsync(string RegistrationKey, SheetDef sheetDef, object userState) {
            if ((this.UpLoadSheetDefOperationCompleted == null)) {
                this.UpLoadSheetDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpLoadSheetDefOperationCompleted);
            }
            this.InvokeAsync("UpLoadSheetDef", new object[] {
                        RegistrationKey,
                        sheetDef}, this.UpLoadSheetDefOperationCompleted, userState);
        }
        
        private void OnUpLoadSheetDefOperationCompleted(object arg) {
            if ((this.UpLoadSheetDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpLoadSheetDefCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://opendental.com/UpdateSheetDef", RequestNamespace="http://opendental.com/", ResponseNamespace="http://opendental.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSheetDef(string RegistrationKey, long WebSheetDefID, SheetDef sheetDef) {
            this.Invoke("UpdateSheetDef", new object[] {
                        RegistrationKey,
                        WebSheetDefID,
                        sheetDef});
        }
        
        /// <remarks/>
        public void UpdateSheetDefAsync(string RegistrationKey, long WebSheetDefID, SheetDef sheetDef) {
            this.UpdateSheetDefAsync(RegistrationKey, WebSheetDefID, sheetDef, null);
        }
        
        /// <remarks/>
        public void UpdateSheetDefAsync(string RegistrationKey, long WebSheetDefID, SheetDef sheetDef, object userState) {
            if ((this.UpdateSheetDefOperationCompleted == null)) {
                this.UpdateSheetDefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSheetDefOperationCompleted);
            }
            this.InvokeAsync("UpdateSheetDef", new object[] {
                        RegistrationKey,
                        WebSheetDefID,
                        sheetDef}, this.UpdateSheetDefOperationCompleted, userState);
        }
        
        private void OnUpdateSheetDefOperationCompleted(object arg) {
            if ((this.UpdateSheetDefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSheetDefCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class webforms_preference : EntityObject {
        
        private long dentalOfficeIDField;
        
        private int colorBorderField;
        
        private string cultureNameField;
        
        /// <remarks/>
        public long DentalOfficeID {
            get {
                return this.dentalOfficeIDField;
            }
            set {
                this.dentalOfficeIDField = value;
            }
        }
        
        /// <remarks/>
        public int ColorBorder {
            get {
                return this.colorBorderField;
            }
            set {
                this.colorBorderField = value;
            }
        }
        
        /// <remarks/>
        public string CultureName {
            get {
                return this.cultureNameField;
            }
            set {
                this.cultureNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webforms_preference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webforms_sheetdef))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webforms_sheetfield))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webforms_sheet))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public abstract partial class EntityObject : StructuralObject {
        
        private EntityKey entityKeyField;
        
        /// <remarks/>
        public EntityKey EntityKey {
            get {
                return this.entityKeyField;
            }
            set {
                this.entityKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class EntityKey {
        
        private string entitySetNameField;
        
        private string entityContainerNameField;
        
        private EntityKeyMember[] entityKeyValuesField;
        
        /// <remarks/>
        public string EntitySetName {
            get {
                return this.entitySetNameField;
            }
            set {
                this.entitySetNameField = value;
            }
        }
        
        /// <remarks/>
        public string EntityContainerName {
            get {
                return this.entityContainerNameField;
            }
            set {
                this.entityContainerNameField = value;
            }
        }
        
        /// <remarks/>
        public EntityKeyMember[] EntityKeyValues {
            get {
                return this.entityKeyValuesField;
            }
            set {
                this.entityKeyValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class EntityKeyMember {
        
        private string keyField;
        
        private object valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
        
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfwebforms_sheet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfwebforms_preference))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public abstract partial class RelatedEnd {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfwebforms_sheet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityReferenceOfwebforms_preference))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public abstract partial class EntityReference : RelatedEnd {
        
        private EntityKey entityKeyField;
        
        /// <remarks/>
        public EntityKey EntityKey {
            get {
                return this.entityKeyField;
            }
            set {
                this.entityKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class EntityReferenceOfwebforms_sheet : EntityReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class EntityReferenceOfwebforms_preference : EntityReference {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class SheetAndSheetField {
        
        private webforms_sheet web_sheetField;
        
        private webforms_sheetfield[] web_sheetfieldlistField;
        
        /// <remarks/>
        public webforms_sheet web_sheet {
            get {
                return this.web_sheetField;
            }
            set {
                this.web_sheetField = value;
            }
        }
        
        /// <remarks/>
        public webforms_sheetfield[] web_sheetfieldlist {
            get {
                return this.web_sheetfieldlistField;
            }
            set {
                this.web_sheetfieldlistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class webforms_sheet : EntityObject {
        
        private long sheetIDField;
        
        private long dentalOfficeIDField;
        
        private string descriptionField;
        
        private int sheetTypeField;
        
        private System.DateTime dateTimeSheetField;
        
        private float fontSizeField;
        
        private string fontNameField;
        
        private int widthField;
        
        private int heightField;
        
        private sbyte isLandscapeField;
        
        private long clinicNumField;
        
        private EntityReferenceOfwebforms_preference webforms_preferenceReferenceField;
        
        /// <remarks/>
        public long SheetID {
            get {
                return this.sheetIDField;
            }
            set {
                this.sheetIDField = value;
            }
        }
        
        /// <remarks/>
        public long DentalOfficeID {
            get {
                return this.dentalOfficeIDField;
            }
            set {
                this.dentalOfficeIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int SheetType {
            get {
                return this.sheetTypeField;
            }
            set {
                this.sheetTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeSheet {
            get {
                return this.dateTimeSheetField;
            }
            set {
                this.dateTimeSheetField = value;
            }
        }
        
        /// <remarks/>
        public float FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string FontName {
            get {
                return this.fontNameField;
            }
            set {
                this.fontNameField = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public sbyte IsLandscape {
            get {
                return this.isLandscapeField;
            }
            set {
                this.isLandscapeField = value;
            }
        }
        
        /// <remarks/>
        public long ClinicNum {
            get {
                return this.clinicNumField;
            }
            set {
                this.clinicNumField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfwebforms_preference webforms_preferenceReference {
            get {
                return this.webforms_preferenceReferenceField;
            }
            set {
                this.webforms_preferenceReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class webforms_sheetfield : EntityObject {
        
        private long sheetFieldIDField;
        
        private long sheetIDField;
        
        private int fieldTypeField;
        
        private string fieldNameField;
        
        private string fieldValueField;
        
        private float fontSizeField;
        
        private string fontNameField;
        
        private sbyte fontIsBoldField;
        
        private int xPosField;
        
        private int yPosField;
        
        private int widthField;
        
        private int heightField;
        
        private int growthBehaviorField;
        
        private string radioButtonValueField;
        
        private string radioButtonGroupField;
        
        private sbyte isRequiredField;
        
        private int tabOrderField;
        
        private string reportableNameField;
        
        private int textAlignField;
        
        private int itemColorField;
        
        private EntityReferenceOfwebforms_sheet webforms_sheetReferenceField;
        
        /// <remarks/>
        public long SheetFieldID {
            get {
                return this.sheetFieldIDField;
            }
            set {
                this.sheetFieldIDField = value;
            }
        }
        
        /// <remarks/>
        public long SheetID {
            get {
                return this.sheetIDField;
            }
            set {
                this.sheetIDField = value;
            }
        }
        
        /// <remarks/>
        public int FieldType {
            get {
                return this.fieldTypeField;
            }
            set {
                this.fieldTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
            }
        }
        
        /// <remarks/>
        public string FieldValue {
            get {
                return this.fieldValueField;
            }
            set {
                this.fieldValueField = value;
            }
        }
        
        /// <remarks/>
        public float FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string FontName {
            get {
                return this.fontNameField;
            }
            set {
                this.fontNameField = value;
            }
        }
        
        /// <remarks/>
        public sbyte FontIsBold {
            get {
                return this.fontIsBoldField;
            }
            set {
                this.fontIsBoldField = value;
            }
        }
        
        /// <remarks/>
        public int XPos {
            get {
                return this.xPosField;
            }
            set {
                this.xPosField = value;
            }
        }
        
        /// <remarks/>
        public int YPos {
            get {
                return this.yPosField;
            }
            set {
                this.yPosField = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public int GrowthBehavior {
            get {
                return this.growthBehaviorField;
            }
            set {
                this.growthBehaviorField = value;
            }
        }
        
        /// <remarks/>
        public string RadioButtonValue {
            get {
                return this.radioButtonValueField;
            }
            set {
                this.radioButtonValueField = value;
            }
        }
        
        /// <remarks/>
        public string RadioButtonGroup {
            get {
                return this.radioButtonGroupField;
            }
            set {
                this.radioButtonGroupField = value;
            }
        }
        
        /// <remarks/>
        public sbyte IsRequired {
            get {
                return this.isRequiredField;
            }
            set {
                this.isRequiredField = value;
            }
        }
        
        /// <remarks/>
        public int TabOrder {
            get {
                return this.tabOrderField;
            }
            set {
                this.tabOrderField = value;
            }
        }
        
        /// <remarks/>
        public string ReportableName {
            get {
                return this.reportableNameField;
            }
            set {
                this.reportableNameField = value;
            }
        }
        
        /// <remarks/>
        public int TextAlign {
            get {
                return this.textAlignField;
            }
            set {
                this.textAlignField = value;
            }
        }
        
        /// <remarks/>
        public int ItemColor {
            get {
                return this.itemColorField;
            }
            set {
                this.itemColorField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfwebforms_sheet webforms_sheetReference {
            get {
                return this.webforms_sheetReferenceField;
            }
            set {
                this.webforms_sheetReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webforms_preference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webforms_sheetdef))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webforms_sheetfield))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(webforms_sheet))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public abstract partial class StructuralObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://opendental.com/")]
    public partial class webforms_sheetdef : EntityObject {
        
        private long webSheetDefIDField;
        
        private long dentalOfficeIDField;
        
        private string descriptionField;
        
        private int sheetTypeField;
        
        private float fontSizeField;
        
        private string fontNameField;
        
        private int widthField;
        
        private int heightField;
        
        private sbyte isLandscapeField;
        
        private long sheetDefNumField;
        
        private EntityReferenceOfwebforms_preference webforms_preferenceReferenceField;
        
        /// <remarks/>
        public long WebSheetDefID {
            get {
                return this.webSheetDefIDField;
            }
            set {
                this.webSheetDefIDField = value;
            }
        }
        
        /// <remarks/>
        public long DentalOfficeID {
            get {
                return this.dentalOfficeIDField;
            }
            set {
                this.dentalOfficeIDField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int SheetType {
            get {
                return this.sheetTypeField;
            }
            set {
                this.sheetTypeField = value;
            }
        }
        
        /// <remarks/>
        public float FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
            }
        }
        
        /// <remarks/>
        public string FontName {
            get {
                return this.fontNameField;
            }
            set {
                this.fontNameField = value;
            }
        }
        
        /// <remarks/>
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public sbyte IsLandscape {
            get {
                return this.isLandscapeField;
            }
            set {
                this.isLandscapeField = value;
            }
        }
        
        /// <remarks/>
        public long SheetDefNum {
            get {
                return this.sheetDefNumField;
            }
            set {
                this.sheetDefNumField = value;
            }
        }
        
        /// <remarks/>
        public EntityReferenceOfwebforms_preference webforms_preferenceReference {
            get {
                return this.webforms_preferenceReferenceField;
            }
            set {
                this.webforms_preferenceReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetPreferencesCompletedEventHandler(object sender, SetPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SetPreferencesV2CompletedEventHandler(object sender, SetPreferencesV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetPreferencesV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetPreferencesV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetPreferencesCompletedEventHandler(object sender, GetPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webforms_preference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webforms_preference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSheetsCompletedEventHandler(object sender, GetSheetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSheetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSheetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SheetAndSheetField[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SheetAndSheetField[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteSheetDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CheckRegistrationKeyCompletedEventHandler(object sender, CheckRegistrationKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRegistrationKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRegistrationKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDentalOfficeIDCompletedEventHandler(object sender, GetDentalOfficeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDentalOfficeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDentalOfficeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ServiceExistsCompletedEventHandler(object sender, ServiceExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ServiceExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ServiceExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetSheetDefAddressCompletedEventHandler(object sender, GetSheetDefAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSheetDefAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSheetDefAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DownloadSheetDefsCompletedEventHandler(object sender, DownloadSheetDefsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadSheetDefsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadSheetDefsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public webforms_sheetdef[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((webforms_sheetdef[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteSheetDefCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpLoadSheetDefCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateSheetDefCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591