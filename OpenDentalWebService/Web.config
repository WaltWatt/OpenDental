<?xml version="1.0"?>
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="OpenDentalWebService.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <appSettings/>
  <connectionStrings/>
  <system.web>
    <!-- 
      Our DTO objects can make the URL very long.  To accomodate for this, we increase the maxUrlLength and the maxQueryStringLength values. 
      RequestValidationMode: indicates which ASP.NET version-specific approach to validation will be used.  The default is 4.0.  (An unhandled exception will occur unless this is 2.0)
      MaxUrlLength: integer that sets the maximum possible length of the URL in an HTTP request.  The default is 260. 
      MaxQueryStringLength: integer that sets the maximum possible length of a query string in an HTTP request.  The default is 2048. 
    -->    
    <httpRuntime requestValidationMode="2.0" maxUrlLength="260" maxQueryStringLength="2048" />
    <compilation debug="true" targetFramework="4.0"/>
    <!--
      The <authentication> section enables configuration 
      of the security authentication mode used by 
      ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Windows"/>
    <!--
       The <customErrors> section enables configuration 
       of what to do if/when an unhandled error occurs 
       during the execution of a request. Specifically, 
       it enables developers to configure html error pages 
       to be displayed in place of a error stack trace.

       <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
         <error statusCode="403" redirect="NoAccess.htm" />
         <error statusCode="404" redirect="FileNotFound.htm" />
       </customErrors>
    -->
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
    <!--
      The GWT applications use http POST protocol to talk with the web service.  POST is disabled by default for installations of IIS.  http://support.microsoft.com/kb/819267
      The following webServices node enables http POST protocol.  If http GET protocol is used in the future, it will need to be added as well.
    -->
    <webServices>
      <protocols>
        <add name="HttpPost"/>
      </protocols>
    </webServices>
  </system.web>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <applicationSettings>

  </applicationSettings>
</configuration>