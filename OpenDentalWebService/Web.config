<?xml version="1.0"?>
<configuration>
	<configSections>
		<sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<section name="OpenDentalWebService.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
		</sectionGroup>
	</configSections>
	<appSettings/>
	<connectionStrings/>
	<!--
		For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

		The following attributes can be set on the <httpRuntime> tag.
	<system.Web>
		<httpRuntime targetFramework="4.5" />
	</system.Web>
	-->
	<system.web>
		<!-- 
			Our DTO objects can make the URL very long.  To accommodate for this, we increase the maxUrlLength and the maxQueryStringLength values. 
			RequestValidationMode: indicates which ASP.NET version-specific approach to validation will be used.  The default is 4.0.  (An unhandled exception will occur unless this is 2.0)
			MaxUrlLength: integer that sets the maximum possible length of the URL in an HTTP request.  The default is 260. 
			MaxQueryStringLength: integer that sets the maximum possible length of a query string in an HTTP request.  The default is 2048. 
		-->
		<httpRuntime requestValidationMode="2.0" maxUrlLength="260" maxQueryStringLength="2048"/>
		<compilation debug="true" targetFramework="4.5"/>
		<!--
			The <authentication> section enables configuration 
			of the security authentication mode used by 
			ASP.NET to identify an incoming user. 
		-->
		<authentication mode="Windows"/>
		<!--
			The <customErrors> section enables configuration 
			of what to do if/when an unhandled error occurs 
			during the execution of a request. Specifically, 
			it enables developers to configure html error pages 
			to be displayed in place of a error stack trace.

		<customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
			<error statusCode="403" redirect="NoAccess.htm" />
			<error statusCode="404" redirect="FileNotFound.htm" />
		</customErrors>
		-->
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>
		<!--
			The GWT applications use http POST protocol to talk with the web service.  POST is disabled by default for installations of IIS.  http://support.microsoft.com/kb/819267
			The following webServices node enables http POST protocol.  If http GET protocol is used in the future, it will need to be added as well.
		-->
		<webServices>
			<protocols>
				<add name="HttpPost"/>
			</protocols>
		</webServices>
	</system.web>
	<!-- 
		The system.webServer section is required for running ASP.NET AJAX under Internet
		Information Services 7.0.  It is not necessary for previous version of IIS.
	-->
	<system.webServer>
		<httpProtocol>
			<customHeaders>
				<!-- 
					Access-Control-Allow-Origin is a workaround for Same Origin Policy (SOP).
					Set the value equal to "*" when in debug mode but make sure not to commit it for release mode.
					All of our hosted web applications currently utilize https://patientviewer.com
					This allows failed HTTP POST requests to show a meaningful error instead of empty string and error code of 0.
				-->
				<add name="Access-Control-Allow-Origin" value="https://patientviewer.com"/>
			</customHeaders>
		</httpProtocol>
	</system.webServer>
	<applicationSettings>

	</applicationSettings>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30AD4FE6B2A6AEED" culture="neutral"/>
				<bindingRedirect oldVersion="0.0.0.0-9.0.0.0" newVersion="9.0.0.0"/>
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
</configuration>
